
//    @PostMapping("/errorhandling")
//    public ResponseEntity<?> errorhandling() throws JsonProcessingException {
//////        Course c1 = new Course("ddc","cdcd","cdcd");
//////        return ResponseEntity.ok(c1);
//
//
////        String message = "Resource not found: ";
//////        log.error(message, e);
////
////        Map<String, Object> body = new HashMap<>();
////        body.put("message", message);
////
////        return new ResponseEntity<>(body, HttpStatus.NOT_FOUND);
//        Course c1;
////        try {
//            c1 =  abc();
////        }catch (Exception e){
////            c1 = new Course("he","he","he");
////        }
//
//
//        return ResponseEntity.ok(c1);
//
//    }
//
//
//
//
//    private Course abc() throws JsonProcessingException {
//
//        if(1!=0)
//        {
//            Course c1 = bcd();
//        }
//
//        return new Course("cdc","cdcd","cdcd");
//    }
//
//    private Course bcd() throws JsonProcessingException{
//        if(1!=0) {
//            throw new SQLException("dijdkcdjdc");
//        }
//        return new Course("cdc","cdcd","cdcd");
//    }

//    private Course cde() throws JsonProcessingException{
//        if(1!=0)
//            throw new NoSuchElementFoundException("hehehe");
//        return null;
//    }





    @ExceptionHandler(NoSuchElementFoundException.class)
    @ResponseStatus(HttpStatus.FOUND)
    public ResponseEntity<Map<String,Object>> handleNoSuchElementFoundException(NoSuchElementFoundException exception) {
        Map<String,Object> M = new HashMap<>();
        M.put("Code",384948934);
        M.put("message","NOT FOUND");

        return ResponseEntity
                .status(HttpStatus.NOT_FOUND)
                .body(M);
    }

    public class NoSuchElementFoundException extends ResponseStatusException {

        public NoSuchElementFoundException(String message){
            super(HttpStatus.NOT_FOUND, message);
        }

    }